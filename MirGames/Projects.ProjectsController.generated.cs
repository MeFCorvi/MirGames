// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MirGames.Areas.Projects.Controllers
{
    public partial class ProjectsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProjectsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectToProject()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Project()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Project);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Gallery()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Gallery);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Archive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult WorkItems()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WorkItems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Settings()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Code()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Code);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectsController Actions { get { return MVC.Projects.Projects; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Projects";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Projects";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Projects";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string RedirectToProject = "RedirectToProject";
            public readonly string Project = "Project";
            public readonly string Gallery = "Gallery";
            public readonly string Archive = "Archive";
            public readonly string WorkItems = "WorkItems";
            public readonly string WorkItemDialog = "WorkItemDialog";
            public readonly string New = "New";
            public readonly string GalleryItemDialog = "GalleryItemDialog";
            public readonly string Settings = "Settings";
            public readonly string Code = "Code";
            public readonly string AddWorkItemDialog = "AddWorkItemDialog";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string RedirectToProject = "RedirectToProject";
            public const string Project = "Project";
            public const string Gallery = "Gallery";
            public const string Archive = "Archive";
            public const string WorkItems = "WorkItems";
            public const string WorkItemDialog = "WorkItemDialog";
            public const string New = "New";
            public const string GalleryItemDialog = "GalleryItemDialog";
            public const string Settings = "Settings";
            public const string Code = "Code";
            public const string AddWorkItemDialog = "AddWorkItemDialog";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string tag = "tag";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_RedirectToProject s_params_RedirectToProject = new ActionParamsClass_RedirectToProject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToProject RedirectToProjectParams { get { return s_params_RedirectToProject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToProject
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_Project s_params_Project = new ActionParamsClass_Project();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Project ProjectParams { get { return s_params_Project; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Project
        {
            public readonly string projectAlias = "projectAlias";
        }
        static readonly ActionParamsClass_Gallery s_params_Gallery = new ActionParamsClass_Gallery();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Gallery GalleryParams { get { return s_params_Gallery; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Gallery
        {
            public readonly string projectAlias = "projectAlias";
        }
        static readonly ActionParamsClass_Archive s_params_Archive = new ActionParamsClass_Archive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Archive ArchiveParams { get { return s_params_Archive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Archive
        {
            public readonly string projectAlias = "projectAlias";
        }
        static readonly ActionParamsClass_WorkItems s_params_WorkItems = new ActionParamsClass_WorkItems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_WorkItems WorkItemsParams { get { return s_params_WorkItems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_WorkItems
        {
            public readonly string projectAlias = "projectAlias";
            public readonly string tag = "tag";
            public readonly string itemType = "itemType";
        }
        static readonly ActionParamsClass_Settings s_params_Settings = new ActionParamsClass_Settings();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Settings SettingsParams { get { return s_params_Settings; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Settings
        {
            public readonly string projectAlias = "projectAlias";
        }
        static readonly ActionParamsClass_Code s_params_Code = new ActionParamsClass_Code();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Code CodeParams { get { return s_params_Code; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Code
        {
            public readonly string projectAlias = "projectAlias";
            public readonly string path = "path";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _AddWorkItemDialog = "_AddWorkItemDialog";
                public readonly string _GalleryItemDialog = "_GalleryItemDialog";
                public readonly string _ProjectInfo = "_ProjectInfo";
                public readonly string _ProjectListItem = "_ProjectListItem";
                public readonly string _ProjectMenu = "_ProjectMenu";
                public readonly string _WipMenu = "_WipMenu";
                public readonly string _WorkItemComment = "_WorkItemComment";
                public readonly string _WorkItemDialog = "_WorkItemDialog";
                public readonly string Gallery = "Gallery";
                public readonly string Index = "Index";
                public readonly string New = "New";
                public readonly string Project = "Project";
                public readonly string RepositoryDirectory = "RepositoryDirectory";
                public readonly string RepositoryFile = "RepositoryFile";
                public readonly string Settings = "Settings";
                public readonly string WorkItems = "WorkItems";
            }
            public readonly string _AddWorkItemDialog = "~/Areas/Projects/Views/Projects/_AddWorkItemDialog.cshtml";
            public readonly string _GalleryItemDialog = "~/Areas/Projects/Views/Projects/_GalleryItemDialog.cshtml";
            public readonly string _ProjectInfo = "~/Areas/Projects/Views/Projects/_ProjectInfo.cshtml";
            public readonly string _ProjectListItem = "~/Areas/Projects/Views/Projects/_ProjectListItem.cshtml";
            public readonly string _ProjectMenu = "~/Areas/Projects/Views/Projects/_ProjectMenu.cshtml";
            public readonly string _WipMenu = "~/Areas/Projects/Views/Projects/_WipMenu.cshtml";
            public readonly string _WorkItemComment = "~/Areas/Projects/Views/Projects/_WorkItemComment.cshtml";
            public readonly string _WorkItemDialog = "~/Areas/Projects/Views/Projects/_WorkItemDialog.cshtml";
            public readonly string Gallery = "~/Areas/Projects/Views/Projects/Gallery.cshtml";
            public readonly string Index = "~/Areas/Projects/Views/Projects/Index.cshtml";
            public readonly string New = "~/Areas/Projects/Views/Projects/New.cshtml";
            public readonly string Project = "~/Areas/Projects/Views/Projects/Project.cshtml";
            public readonly string RepositoryDirectory = "~/Areas/Projects/Views/Projects/RepositoryDirectory.cshtml";
            public readonly string RepositoryFile = "~/Areas/Projects/Views/Projects/RepositoryFile.cshtml";
            public readonly string Settings = "~/Areas/Projects/Views/Projects/Settings.cshtml";
            public readonly string WorkItems = "~/Areas/Projects/Views/Projects/WorkItems.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ProjectsController : MirGames.Areas.Projects.Controllers.ProjectsController
    {
        public T4MVC_ProjectsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string tag, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string tag, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            IndexOverride(callInfo, tag, page);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectToProject(int projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectToProject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            RedirectToProjectOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void ProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias);

        [NonAction]
        public override System.Web.Mvc.ActionResult Project(string projectAlias)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Project);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            ProjectOverride(callInfo, projectAlias);
            return callInfo;
        }

        [NonAction]
        partial void GalleryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias);

        [NonAction]
        public override System.Web.Mvc.ActionResult Gallery(string projectAlias)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Gallery);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            GalleryOverride(callInfo, projectAlias);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias);

        [NonAction]
        public override System.Web.Mvc.ActionResult Archive(string projectAlias)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            ArchiveOverride(callInfo, projectAlias);
            return callInfo;
        }

        [NonAction]
        partial void WorkItemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias, string tag, MirGames.Domain.Wip.ViewModels.WorkItemType? itemType);

        [NonAction]
        public override System.Web.Mvc.ActionResult WorkItems(string projectAlias, string tag, MirGames.Domain.Wip.ViewModels.WorkItemType? itemType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WorkItems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemType", itemType);
            WorkItemsOverride(callInfo, projectAlias, tag, itemType);
            return callInfo;
        }

        [NonAction]
        partial void WorkItemDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult WorkItemDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WorkItemDialog);
            WorkItemDialogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void NewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult New()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
            NewOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GalleryItemDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GalleryItemDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GalleryItemDialog);
            GalleryItemDialogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SettingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias);

        [NonAction]
        public override System.Web.Mvc.ActionResult Settings(string projectAlias)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            SettingsOverride(callInfo, projectAlias);
            return callInfo;
        }

        [NonAction]
        partial void CodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectAlias, string path);

        [NonAction]
        public override System.Web.Mvc.ActionResult Code(string projectAlias, string path)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Code);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectAlias", projectAlias);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "path", path);
            CodeOverride(callInfo, projectAlias, path);
            return callInfo;
        }

        [NonAction]
        partial void AddWorkItemDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddWorkItemDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddWorkItemDialog);
            AddWorkItemDialogOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
