body {}
@import "flexbox.less";

@font-color: #000;
@background-color: #fff;
@header-background: @background-color;
@main-color: hsl(205.2, 39%, 34.7%);
@second-color: spin(@main-color, 120);
@third-color: spin(@main-color, 240);
@sub-background: mix(@main-color, @background-color, 15%);
@page-header-background: mix(@main-color, @background-color, 5%);

@section-width: 180px;
@menu-width: 180px;
@section-hidden-width: 0px;
@border-color: mix(@background-color, @font-color, 96%);
@font-size-default: 10px;

@avatar-tiny: 24px;
@avatar-small: 32px;
@avatar-medium: 40px;
@avatar-big: 48px;

@section-link-height: 42px;

@link-color: saturate(@main-color, 20%);
@link-color-hover: lighten(spin(@link-color, 120), 20%);

@date-color: darken(saturate(spin(@main-color, -140), 50%), 10%);

@normal-duration: 0.5s;
@indent: 20px;

//== Media queries breakpoints
@screen-ts-min:              320px;
@screen-xs-min:              480px;
@screen-sm-min:              768px;
@screen-md-min:              992px;
@screen-lg-min:              1200px;

// So media queries don't overlap when required, provide a maximum
@screen-ts-max:              (@screen-xs-min - 1);
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);

//== Grid system
@grid-columns:              12;
@grid-gutter-width:         0px;
@grid-float-breakpoint:     @screen-sm-min;
@grid-float-breakpoint-max: (@grid-float-breakpoint - 1);

.indent() {
    padding: @indent;
}

.transition(@property, @duration: @normal-duration, @timing: ease) {
    -moz-transition-property: @property;
    -o-transition-property: @property;
    -webkit-transition-property: @property;
    transition-property: @property;
    
    -moz-transition-duration: @duration;
    -o-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    transition-duration: @duration;

    -moz-transition-timing-function: @timing;
    -o-transition-timing-function: @timing;
    -webkit-transition-timing-function: @timing;
    transition-timing-function: @timing;
}

.visibility-transition-start() {
    opacity: 0;
    visibility: hidden;
    -moz-transition: visibility 0s linear 0.1s,opacity 0.1s ease-in;
    -o-transition: visibility 0s linear 0.1s,opacity 0.1s ease-in;
    -webkit-transition: visibility 0s linear 0.1s,opacity 0.1s ease-in;
    transition: visibility 0s linear 0.1s,opacity 0.1s ease-in;
}

.visibility-transition-end() {
    -moz-transition-delay: 0s;
    -o-transition-delay: 0s;
    -webkit-transition-delay: 0s;
    transition-delay: 0s;
    visibility: visible;
    opacity: 1;
}

.box-sizing(@style) {
  box-sizing:         @style;
  -webkit-box-sizing: @style;
  -moz-box-sizing:    @style;
}

.box-shadow(@style) {
    -webkit-box-shadow: @style;
    -moz-box-shadow: @style;
    box-shadow: @style;
}

.box-shadow(@style1, @style2) {
    -webkit-box-shadow: @style1, @style2;
    -moz-box-shadow: @style1, @style2;
    box-shadow: @style1, @style2;
}

.header-font() {
    font-family: "Droid Sans", Tahoma, sans-serif;
}

.button-font() {
    font-family: "Droid Sans", Tahoma, sans-serif;
}

.font-size(@size) {
    font-size: (@size * @font-size-default);
}

.font-size-xs(@size) {
    @media (min-width: @screen-xs-min) {
        font-size: (@size * @font-size-default);
    }
}

.font-size-sm(@size) {
    @media (min-width: @screen-sm-min) {
        font-size: (@size * @font-size-default);
    }
}

.font-size-md(@size) {
    @media (min-width: @screen-md-min) {
        font-size: (@size * @font-size-default);
    }
}

.font-size-lg(@size) {
    @media (min-width: @screen-lg-min) {
        font-size: (@size * @font-size-default);
    }
}

.active-link-color(@color) {
    &:active, &:hover, &:focus {
        color: @color;
    }
}

.avatar(@size, @background-size: cover) {
    background-size: @background-size;
    background-clip: content-box;
    background-position: top center;
    background-repeat: no-repeat;
    width: @size;
    height: @size;
    .box-sizing(border-box);
}

.avatar-small() {
    .avatar(@avatar-small);
}

.avatar-medium() {
    .avatar(@avatar-medium);
}

.avatar-tiny() {
    .avatar(@avatar-tiny);
}

.avatar-big() {
    .avatar(@avatar-big);
}

.date-small() {
    .font-size(1.2);
    color: #8c8c0c;
}

.button() {
    @background: lighten(desaturate(@link-color, 30%), 20%);
    .button-font();
    .font-size(1.2);
    display: block;
    background: @background;
    float: left;
    padding: @indent/4 @indent/2;
    text-decoration: none;
    color: @background-color;
    border: 1px solid darken(@background, 10%);
    text-shadow: 0px 0px 4px #000;
    margin-right: @indent/5;
    line-height: 20px;
    min-width: 60px;
    min-width: 3vw;
    text-align: center;

    &:hover, &:active, &:focus {
        .button-focused();
    }

    & .fa {
        margin-right: 5px;
    }

    .button-disabled();
}

.button-focused() {
    @background: lighten(desaturate(@link-color-hover, 30%), 0%);
    background: @background;
    border: 1px solid darken(@background, 10%);
    color: @background-color;
    text-decoration: none;
}

.button-disabled() {
    &.button-disabled {
        opacity: 0.5;
        color: #999;
        cursor: default;
        @background: #000;
        background: @background;
        border: 1px solid darken(@background, 10%);

        &:hover {
            color: #999;
            background: @background;
            border: 1px solid darken(@background, 10%);
        }
    }
}

.form-input() {
    @transition: border, box-shadow;
    @insetShadow: inset 0 1px 2px rgba(0, 0, 0, 0.01);
    width: 100%;
    .box-sizing(border-box);
    padding: @indent/4;
    border: 1px solid fade(@main-color, 30%);
    outline: none;
    .transition(@transition, 0.2s);
            
    &.ng-invalid, &:invalid {
        border: 1px solid rgba(150, 0, 0, 0.2);
    }
            
    &:active, &:focus {
        .box-shadow(@insetShadow, 0 0 5px fade(@main-color, 30%));

        &.ng-invalid, &:invalid {
            .box-shadow(@insetShadow, 0 0 5px rgba(150, 0, 0, 0.2));
        }
    }
}

.recaptcha() {
    .recaptchatable {
        border: 1px solid rgba(54, 94, 123, 0.3) !important;

        & #recaptcha_response_field {
            border: 1px solid rgba(54, 94, 123, 0.3) !important;
            .form-input();
        }

        & #recaptcha_image {
            margin: 0 !important;
        }
    }
}

.page-title() {
    .header-font();
    .font-size(1.8);
    margin-bottom: @indent/2;
    padding-bottom: 0;
}

.page-subtitle() {
    .page-title();
    border: none;
    .font-size(1.6);
    padding-bottom: 0;
    margin-bottom: @indent/2;
}

.page-header-end() {
    background: mix(@background-color, @main-color, 95%);
    border: 0;
    border-top: 1px solid mix(@background-color, @main-color, 90%);
    border-bottom: 5px solid mix(@background-color, @main-color, 70%);
}

.page-main-block() {
    .indent();

    & > h3 {
        .page-title();
    }

    background: @background-color;
    border-bottom: 5px solid @sub-background;
}

.page-block() {
    .page-block(@indent);
}

.page-block(@padding) when (ispixel(@padding)) {
    .page-block(@padding, 0);

    &:first-of-type {
        padding-top: 0;
    }

    &:last-of-type {
        padding-bottom: 0;
    }
}

.page-block(@padding-top, @padding-left) when (ispixel(@padding-left)), (ispixel(@padding-top)) {
    padding: @padding-top @padding-left;
}

.page-header() {
    background: @page-header-background;
    padding: @indent;
    margin-bottom: @indent/2;
    .box-sizing(border-box);
    padding-bottom: @indent - 1px;
    border-bottom: 1px solid @sub-background;
    display: table;
    table-layout: fixed;

    & > .header {
        display: table-cell;
        width: 100%;

        & > h4 {
            .header-font();
            margin-bottom: 0;
            .font-size(1.4);
            color: mix(@font-color, @background-color, 60%);
        }

        & > h3 {
            .header-font();
            .font-size(2.2);
        }
    }

    & > .buttons {
        display: table-cell;
        vertical-align: middle;

        a {
            white-space: nowrap;
        }
    }
}

.tag-link(@max-width: 50px) {
    a {
        background: lighten(desaturate(@link-color, 50%), 20%);
        color: contrast(desaturate(@link-color, 50%));
        .active-link-color(contrast(desaturate(@link-color, 50%)));
        white-space: nowrap;
        text-overflow: ellipsis;
        padding: 3px;
        max-width: @max-width;
        display: block;
        overflow: hidden;
        text-decoration: none;

        &:hover, &:active, &:focus {
            background: desaturate(@link-color, 50%);
            color: contrast(desaturate(@link-color, 50%));
        }
    }
}

.header-with-tags() {
    position: relative;

    & > h3 {
        .page-title();
    }

    & > ul.tags {
        .tags();
        float: right;
        margin-top: 6px;
    }
}

.tags(@max-width: 50px) {
    overflow: hidden;
    list-style-type: none;
    .font-size(1.1);

    & > li {
        float: left;
        margin-right: 2px;
        margin-bottom: 2px;
        display: block;
        .tag-link(@max-width);

        &:last-child {
            margin-right: 0;
        }
    }
}

.default-link() {
    text-decoration: none;
    color: @link-color;
    .active-link-color(@link-color-hover);

    &:hover, &:focus, &:active {
        text-decoration: underline;
    }
}

// Creates a wrapper for a series of columns
.make-row(@valign: center) {
  .flex-display();
  .align-items(@valign);
  .flex-wrap(wrap);
}

.hidden-xs() {
    @media (max-width: @screen-xs-max) {
        display: none;
    }
}

.hidden-sm() {
    @media (max-width: @screen-sm-max) {
        display: none;
    }
}

// Makes block visible only if @visibility equal to 1
.visible-when(@visibility) when (@visibility = 1) {
}

// Makes block visible only if @visibility equal to 1
.visible-when(@visibility) when (@visibility = 0) {
    display: none;
}

// Generate the extra small columns
.make-xs-column(@columns) {
  position: relative;
  float: left;
  width: percentage((@columns / @grid-columns));
  min-height: 1px;
  .box-sizing(border-box);
}

// Generate the small columns
.make-sm-column(@columns) {
  position: relative;
  min-height: 1px;
  .box-sizing(border-box);

  @media (min-width: @screen-sm-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// Generate the medium columns
.make-md-column(@columns) {
  position: relative;
  min-height: 1px;
  .box-sizing(border-box);

  @media (min-width: @screen-md-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

.make-lg-column(@columns) {
  position: relative;
  min-height: 1px;
  .box-sizing(border-box);

  @media (min-width: @screen-lg-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

.oauth-providers() {
    &.github {
        background: url('images/providers/github.png') no-repeat center center;
    }

    &.microsoft {
        background: url('images/providers/microsoft.png') no-repeat center center;
    }

    &.bitbucket {
        background: url('images/providers/bitbucket.png') no-repeat center center;
    }

    &.twitter {
        background: url('images/providers/twitter.png') no-repeat center center;
    }

    &.facebook {
        background: url('images/providers/facebook.png') no-repeat center center;
    }

    &.google {
        background: url('images/providers/google.png') no-repeat center center;
    }
}