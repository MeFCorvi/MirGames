// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MirGames.Areas.Forum.Controllers
{
    public partial class ForumController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ForumController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Topics()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topics);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult New()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Topic()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ForumController Actions { get { return MVC.Forum.Forum; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Forum";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Forum";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Forum";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Unread = "Unread";
            public readonly string Topics = "Topics";
            public readonly string Rss = "Rss";
            public readonly string New = "New";
            public readonly string Topic = "Topic";
            public readonly string EditPostDialog = "EditPostDialog";
            public readonly string DeletePostDialog = "DeletePostDialog";
            public readonly string DeleteTopicDialog = "DeleteTopicDialog";
            public readonly string MarkAllTopicsAsRead = "MarkAllTopicsAsRead";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Unread = "Unread";
            public const string Topics = "Topics";
            public const string Rss = "Rss";
            public const string New = "New";
            public const string Topic = "Topic";
            public const string EditPostDialog = "EditPostDialog";
            public const string DeletePostDialog = "DeletePostDialog";
            public const string DeleteTopicDialog = "DeleteTopicDialog";
            public const string MarkAllTopicsAsRead = "MarkAllTopicsAsRead";
        }


        static readonly ActionParamsClass_Unread s_params_Unread = new ActionParamsClass_Unread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Unread UnreadParams { get { return s_params_Unread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Unread
        {
            public readonly string tag = "tag";
            public readonly string searchString = "searchString";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_Topics s_params_Topics = new ActionParamsClass_Topics();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Topics TopicsParams { get { return s_params_Topics; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Topics
        {
            public readonly string forumAlias = "forumAlias";
            public readonly string tag = "tag";
            public readonly string searchString = "searchString";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_Rss s_params_Rss = new ActionParamsClass_Rss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Rss RssParams { get { return s_params_Rss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Rss
        {
            public readonly string tag = "tag";
            public readonly string searchString = "searchString";
        }
        static readonly ActionParamsClass_New s_params_New = new ActionParamsClass_New();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_New NewParams { get { return s_params_New; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_New
        {
            public readonly string forumAlias = "forumAlias";
        }
        static readonly ActionParamsClass_Topic s_params_Topic = new ActionParamsClass_Topic();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Topic TopicParams { get { return s_params_Topic; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Topic
        {
            public readonly string forumAlias = "forumAlias";
            public readonly string topicId = "topicId";
            public readonly string page = "page";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DeletePostDialog = "_DeletePostDialog";
                public readonly string _DeleteTopicDialog = "_DeleteTopicDialog";
                public readonly string _EditPostDialog = "_EditPostDialog";
                public readonly string _ForumPostListItem = "_ForumPostListItem";
                public readonly string _ForumTopicListItem = "_ForumTopicListItem";
                public readonly string _ForumTopicMenu = "_ForumTopicMenu";
                public readonly string _ForumTopicsList = "_ForumTopicsList";
                public readonly string _NewTopicMenu = "_NewTopicMenu";
                public readonly string Index = "Index";
                public readonly string New = "New";
                public readonly string Topic = "Topic";
                public readonly string Topics = "Topics";
                public readonly string Unread = "Unread";
            }
            public readonly string _DeletePostDialog = "~/Areas/Forum/Views/Forum/_DeletePostDialog.cshtml";
            public readonly string _DeleteTopicDialog = "~/Areas/Forum/Views/Forum/_DeleteTopicDialog.cshtml";
            public readonly string _EditPostDialog = "~/Areas/Forum/Views/Forum/_EditPostDialog.cshtml";
            public readonly string _ForumPostListItem = "~/Areas/Forum/Views/Forum/_ForumPostListItem.cshtml";
            public readonly string _ForumTopicListItem = "~/Areas/Forum/Views/Forum/_ForumTopicListItem.cshtml";
            public readonly string _ForumTopicMenu = "~/Areas/Forum/Views/Forum/_ForumTopicMenu.cshtml";
            public readonly string _ForumTopicsList = "~/Areas/Forum/Views/Forum/_ForumTopicsList.cshtml";
            public readonly string _NewTopicMenu = "~/Areas/Forum/Views/Forum/_NewTopicMenu.cshtml";
            public readonly string Index = "~/Areas/Forum/Views/Forum/Index.cshtml";
            public readonly string New = "~/Areas/Forum/Views/Forum/New.cshtml";
            public readonly string Topic = "~/Areas/Forum/Views/Forum/Topic.cshtml";
            public readonly string Topics = "~/Areas/Forum/Views/Forum/Topics.cshtml";
            public readonly string Unread = "~/Areas/Forum/Views/Forum/Unread.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ForumController : MirGames.Areas.Forum.Controllers.ForumController
    {
        public T4MVC_ForumController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UnreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string tag, string searchString, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Unread(string tag, string searchString, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Unread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchString", searchString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            UnreadOverride(callInfo, tag, searchString, page);
            return callInfo;
        }

        [NonAction]
        partial void TopicsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string forumAlias, string tag, string searchString, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Topics(string forumAlias, string tag, string searchString, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topics);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumAlias", forumAlias);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchString", searchString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            TopicsOverride(callInfo, forumAlias, tag, searchString, page);
            return callInfo;
        }

        [NonAction]
        partial void RssOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string tag, string searchString);

        [NonAction]
        public override System.Web.Mvc.ActionResult Rss(string tag, string searchString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Rss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tag", tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchString", searchString);
            RssOverride(callInfo, tag, searchString);
            return callInfo;
        }

        [NonAction]
        partial void NewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string forumAlias);

        [NonAction]
        public override System.Web.Mvc.ActionResult New(string forumAlias)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumAlias", forumAlias);
            NewOverride(callInfo, forumAlias);
            return callInfo;
        }

        [NonAction]
        partial void TopicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string forumAlias, int topicId, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Topic(string forumAlias, int topicId, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumAlias", forumAlias);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "topicId", topicId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            TopicOverride(callInfo, forumAlias, topicId, page);
            return callInfo;
        }

        [NonAction]
        partial void EditPostDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditPostDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditPostDialog);
            EditPostDialogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DeletePostDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeletePostDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePostDialog);
            DeletePostDialogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DeleteTopicDialogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteTopicDialog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteTopicDialog);
            DeleteTopicDialogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MarkAllTopicsAsReadOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult MarkAllTopicsAsRead()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MarkAllTopicsAsRead);
            MarkAllTopicsAsReadOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
