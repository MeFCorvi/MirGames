@using MirGames.Infrastructure.Queries
@using MirGames.Models
@model MirGames.Domain.Forum.ViewModels.ForumTopicsListItemViewModel
<article @Html.Css("message").Add("unread", !Model.IsRead).Add("read", Model.IsRead)>
    <div class="message-content">
        <i class="fa fa-envelope"></i>
        <i class="fa fa-envelope-o"></i>
        <div class="topic-title-block">
            <div class="tags">
                @foreach (var tag in Model.Tags)
                {
                    <span>@Html.ActionLink(tag, "Index", "Forum", new { tag }, null)</span>
                }
            </div>
            <a href="@Url.Action(MVC.Forum.Forum.Topic(Model.TopicId))" class="topic-title">@Model.Title</a>
            <div class="topic-pagination">
                @Html.Partial("_Pagination", (PaginationViewModel)ViewBag.TopicsPagination[Model.TopicId])
            </div>
            <footer>
                <span class="author">
                    <i class="fa fa-user"></i> @Author.UserLink(Model.Author, "topic-author")
                </span>
                <span class="created-date">
                    <i class="fa fa-clock-o"></i> <span class="topic-created-date">@Html.DisplayFor(m => Model.CreatedDate)</span>
                </span>
            </footer>
        </div>
        <div @Html.Css("replies-count")>
            <span>@(Model.PostsCount - 1)</span>
            @if (@Model.UnreadPostsCount.HasValue)
            {
                <a href="@(Url.Action(MVC.Forum.Forum.Topic(Model.TopicId, PaginationSettings.GetItemPage(Model.PostsCount - Model.UnreadPostsCount.Value, 20) + 1)) + "#first-unread")"
                   class="new-reply">+@Model.UnreadPostsCount.GetValueOrDefault()</a>
            }
        </div>
        <div class="last-post-info">
            @Author.UserAvatarLink(Model.LastPostAuthor, "avatar-small", "user-login", true)
            <span class="topic-updated-date">@Html.DisplayFor(m => Model.UpdatedDate)</span>
        </div>
    </div>
</article>