// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MirGames.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Страница Чат")]
    [NUnit.Framework.CategoryAttribute("currentUser")]
    [NUnit.Framework.CategoryAttribute("menu")]
    [NUnit.Framework.CategoryAttribute("chat")]
    public partial class СтраницаЧатFeature : FluentAutomation.FluentTest
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Chat.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Страница Чат", "", ProgrammingLanguage.CSharp, new string[] {
                        "currentUser",
                        "menu",
                        "chat"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            ScenarioContext.Current[ScenarioContext.Current.ScenarioInfo.Title] = this;
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
 testRunner.Given("Я открыл MirGames", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 10
  testRunner.And("Я под пользователем \"user-test\" и мой пароль \"qqq111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
  testRunner.And("Я нажал на \"Чат\" в меню", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
  testRunner.And("Дождался загрузки чата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Отправка сообщения в чате")]
        public virtual void ОтправкаСообщенияВЧате()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Отправка сообщения в чате", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 15
 testRunner.When("Я ввожу сообщение \"Отправка сообщения в чате\" в чате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 16
  testRunner.And("Нажимаю кнопку \"Отправить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
 testRunner.Then("Сообщение с текстом \"Отправка сообщения в чате\" появляется в списке сообщений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Отправка сообщения в чате по нажатию на enter")]
        public virtual void ОтправкаСообщенияВЧатеПоНажатиюНаEnter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Отправка сообщения в чате по нажатию на enter", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 20
 testRunner.Given("Быстрая клавиша для отправки сообщений - это \"ENTER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 21
  testRunner.And("Фокус в текстовом поле чата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
 testRunner.When("Я ввожу сообщение \"Отправка сообщения в чате по нажатию на enter\" в чате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 23
  testRunner.And("Нажимаю клавишу \"ENTER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
 testRunner.Then("Сообщение с текстом \"Отправка сообщения в чате по нажатию на enter\" появляется в " +
                    "списке сообщений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Отправка пустого сообщения в чате невозможна")]
        public virtual void ОтправкаПустогоСообщенияВЧатеНевозможна()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Отправка пустого сообщения в чате невозможна", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 27
 testRunner.Given("Фокус в текстовом поле чата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 28
  testRunner.And("Текстовое поле чата пустое", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
 testRunner.When("Я нажимаю кнопку \"Отправить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 30
 testRunner.Then("Сообщение без текста не появляется в списке сообщений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Отправка пустого сообщения в чате невозможна по нажатию на enter")]
        public virtual void ОтправкаПустогоСообщенияВЧатеНевозможнаПоНажатиюНаEnter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Отправка пустого сообщения в чате невозможна по нажатию на enter", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 33
 testRunner.Given("Быстрая клавиша для отправки сообщений - это \"ENTER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 34
  testRunner.And("Фокус в текстовом поле чата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
  testRunner.And("Текстовое поле чата пустое", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
 testRunner.When("Нажимаю клавишу \"ENTER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 37
 testRunner.Then("Сообщение без текста не появляется в списке сообщений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Редактирование сообщения в чате")]
        public virtual void РедактированиеСообщенияВЧате()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Редактирование сообщения в чате", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 40
 testRunner.Given("Я отправил сообщение \"тестовое сообщение\" в чате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 41
  testRunner.And("Фокус в текстовом поле чата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
  testRunner.And("Текстовое поле чата пустое", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
 testRunner.When("Я нажимаю клавишу \"UP\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 44
  testRunner.And("Сообщение с текстом \"тестовое сообщение\" загружается для редактирования", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
 testRunner.Then("Я ввожу сообщение \"отредактированное сообщение\" в чате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 46
  testRunner.And("Нажимаю кнопку \"Сохранить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
 testRunner.Then("Сообщение с текстом \"отредактированное сообщение\" появляется в списке сообщений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
